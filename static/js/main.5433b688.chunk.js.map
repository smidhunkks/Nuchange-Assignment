{"version":3,"sources":["components/Cards/Cards.jsx","components/Navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","src","process","data","name","alt","vendor","available","price","onClick","onclick","Navbar","modal_show","toast","configure","App","itemlist","id","category","useState","cart","setcart","modal_state","setmodal_state","Total","setTotal","Filter","setFilter","Addtocart","includes","push","quantity","info","position","POSITION","BOTTOM_RIGHT","autoClose","console","log","CostTotal","temp","forEach","obj","open","onClose","length","map","index","type","value","maxLength","onChange","e","target","onBlur","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5433b688.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\n\r\n\r\nfunction Cards(props) {\r\n  \r\n  return (\r\n    <div className=\"card-wrap\">\r\n      <div className=\"card-outer\">\r\n        <div className=\"card-image\">\r\n          <img src={process.env.PUBLIC_URL + `/images/${props.data.name}.png`} alt=\"product\" className=\"product-image\" />\r\n        </div>\r\n        <div className=\"card-details\">\r\n          <div className=\"card-detail-top\">\r\n            <div className=\"card-price\">\r\n              <div className=\"item-name\">{props.data.name}</div>\r\n              <div className=\"item-vendor\">Vendor : {props.data.vendor}</div>\r\n            </div>\r\n            {props.data.available?<p className=\"stock\">In Stock</p>:<p className=\"stock-out\">Out of Stock</p>}\r\n          </div>\r\n\r\n          <div className=\"card-bottom\">\r\n            <div className=\"price\">\r\n              Price\r\n              <br />\r\n              <p className=\"cost\">₹{props.data.price}</p>\r\n            </div>\r\n            {props.data.available?<button className=\"cart-button\" onClick={()=>{props.onclick(props.data)}}>Add to cart</button>:<button className=\"cart-button button-inactive\">Add to cart</button>}\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"brand-wrap\">\r\n        <span className=\"brand\">E-Mart</span>\r\n      </div>\r\n      <div className=\"nav-item\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/cart.svg\"}\r\n          alt=\"cart icon\"\r\n          className=\"cart\"\r\n          onClick={() => props.modal_show()}\r\n        />\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/profile.svg\"}\r\n          alt=\"profile\"\r\n          className=\"profile\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards/Cards\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\n\ntoast.configure();\n\nfunction App() {\n  const itemlist = [\n    {\n      name: \"Potato\",\n\n      id: 1,\n\n      price: 30,\n\n      available: 1,\n\n      vendor: \"Himachal Pvt Ltd\",\n\n      category: \"Vegetables\",\n    },\n\n    {\n      name: \"Banana\",\n\n      id: 2,\n\n      price: 50,\n\n      available: 1,\n\n      category: \"Fruits\",\n\n      vendor: \"Organic farms\",\n    },\n\n    {\n      name: \"Drumsticks\",\n\n      id: 3,\n\n      price: 20,\n\n      available: 0,\n\n      category: \"Vegetables\",\n\n      vendor: \"Mallikarjuna farms\",\n    },\n\n    {\n      name: \"Orange\",\n\n      id: 4,\n\n      price: 25,\n\n      available: 1,\n\n      vendor: \"Nagpur farms\",\n\n      category: \"Fruits\",\n    },\n  ];\n\n  const [cart, setcart] = useState([]);\n  const [modal_state, setmodal_state] = useState(false);\n  const [Total, setTotal] = useState(0);\n  const [Filter, setFilter] = useState(\"0\");\n\n \n\n  const onOpenModal = (props) => {\n    CostTotal();\n    setmodal_state(true);\n  };\n\n  const onCloseModal = (props) => {\n    setmodal_state(false);\n  };\n\n  const Addtocart = (props) => {\n    if (!cart.includes(props)) {\n      cart.push({ ...props, quantity: 1 });\n      setcart(cart);\n      toast.info(`added ${props.name} to cart`, {position: toast.POSITION.BOTTOM_RIGHT, autoClose:1500});\n      console.log(cart);\n    } else {\n      toast(`Item already in cart`);\n    }\n  };\n\n  const CostTotal = () => {\n    let temp = 0;\n    cart.forEach((obj) => {\n      temp += obj.quantity * obj.price;\n    });\n    setTotal(temp);\n    console.log(Total);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar modal_show={onOpenModal} />\n      </header>\n      <Modal open={modal_state} onClose={onCloseModal}>\n        <div className=\"modalwrap\">\n          <h2>Your Cart</h2>\n          {cart.length\n            ? cart.map((obj, index) => {\n                return (\n                  <div className=\"modal-item\">\n                    <div className=\"modal-name\">{obj.name}</div>\n                    <div className=\"modal-quant\">\n                      <input\n                        type=\"text\"\n                        name=\"quant\"\n                        id=\"quant\"\n                        value={obj.quantity}\n                        maxLength={3}\n                        onChange={(e) => {\n                          if (e.target.value) {\n                            obj.quantity = e.target.value;\n                            cart[index].quantity = e.target.value;\n                            setcart(cart)\n                            \n                          }\n                        }}\n                        onBlur={() => {\n                          if (cart[index].quantity) {\n                            setcart(cart)\n                            \n                          } else {\n                            cart[index].quantity = 1;\n                            setcart(cart)\n                          }\n\n                          console.log(cart);\n                        }}\n                      />\n                      Kg\n                    </div>\n                    <div className=\"modal-price\">₹{obj.price}</div>\n                    <div className=\"modal-item-close\" onClick={()=>{}}>X</div>\n                  </div>\n                );\n              })\n            : \"Your cart is Empty\"}\n\n          <div className=\"modal-bottom\">\n            <div className=\"cart-total\">\n              <p className=\"price-total\">Total</p>\n\n              <p className=\"price-number\">₹{Total}</p>\n            </div>\n            <button className=\"cart-purchase\">Purchase</button>\n          </div>\n        </div>\n      </Modal>\n      <div className=\"filter-menu\">\n        <select\n          id=\"drop-down\"\n          onChange={(e) => {\n            setFilter(e.target.value);\n            console.log(e.target.value);\n          }}\n        >\n          <option value=\"0\">All</option>\n          <option value=\"Vegetables\">Vegetables</option>\n          <option value=\"Fruits\">Fruits</option>\n        </select>\n      </div>\n      <div className=\"item-list-wrap\">\n        <div className=\"item-list\">\n          {Filter !== \"0\"\n            ? itemlist\n                .filter((item) => item.category === Filter)\n                .map((obj, index) => (\n                  <Cards key={index} onclick={Addtocart} data={obj} />\n                ))\n            : itemlist.map((obj, index) => (\n                <Cards key={index} onclick={Addtocart} data={obj} />\n              ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}